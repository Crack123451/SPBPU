поставить gdb (app get gdb)
И g++ (по такой же команде)

kill -l (список всех сигналов)
8 - деление на 0
11 - ошибка к доступу к памяти

./p.o -FP   //Вызываю сигнал ошибки с плавающей точкой
./p.o -SEG
less / var/log/syslog | grep p1  //выводим логи (журнал событий) для кода p1
gdb p1.o  //Запускаем отладчик. Чтобы показать что мы обработали исключение
run -FP
run -SEG
(если спрашивает start....? то жмем "y")
q //Всё закрываем

3.2. Искусственная генерация файла определенного типа
.pl/_raise.o -FP    
.pl/_raise.o -SEG

./p2.o -FP

*.o // это скомпилированная программа, как exe-шник
*.cpp // код сигнала

bt -  выводит на экран текущее состояние стека выполнения программы
s - это шаг, переход в функцию перехватчика
c - продолжить
q - выход
 
p4 - расширенный сигнал
gdb p4.o
run -FP
s
bt //раскрутка стека
finish
q


